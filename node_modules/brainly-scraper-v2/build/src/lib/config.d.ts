export declare const graphqlQuery = "query SearchQuery($query: String!, $len: Int!) {\n    questionSearch(query: $query, first: $len, after: null) {\n    edges {\n      node {\n        databaseId,\n        points,\n        pointsForAnswer,\n        pointsForBestAnswer,\n        created,\n        isClosed,\n        content,\n        author { nick, receivedThanks, avatar { url, thumbnailUrl }, databaseId, description, helpedUsersCount, gender, created, specialRanks { name }, bestAnswersCount, answererLevel, points, rank { name }, friends { count }, answeringStreak { pointsForToday, pointsForTomorrow, progressIncreasedToday, progress, canLotteryPointsBeClaimed }, bestAnswersCountInLast30Days, questions { count, edges { node { content, grade { name }, subject { slug }, points, pointsForBestAnswer, pointsForAnswer, isClosed, canBeAnswered, created, attachments { url }, grade { name }, eduLevel, answers { nodes { databaseId, content, created, isBest, isConfirmed, qualityScore, points, ratesCount, verification { approval { approver { nick, databaseId }}}, attachments { url }, canComment, comments { count, edges { node { databaseId, deleted, content, author {\n                    nick, avatar { url, thumbnailUrl }, databaseId, friends { count }, receivedThanks, points, created, description\n                  }}}}}} }}} }\n        canBeAnswered,\n        grade {\n         name \n        },\n        attachments {\n        \turl\n        },\n        lastActivity,\n        subject {\n          slug\n        },\n        eduLevel,\n        similar {\n          question {\n            content, author { nick, avatar { url, thumbnailUrl }, databaseId, description, helpedUsersCount, gender, created, specialRanks { name }, bestAnswersCount, answererLevel, points, rank { name }, friends { count }, answeringStreak { pointsForToday, pointsForTomorrow, progressIncreasedToday, progress, canLotteryPointsBeClaimed }, bestAnswersCountInLast30Days, questions { count, edges { node { content, grade { name }, subject { slug }, points, pointsForBestAnswer, pointsForAnswer, isClosed, canBeAnswered, created, attachments { url }, grade { name }, eduLevel, answers { nodes { databaseId, content, created, isBest, isConfirmed, points, ratesCount, verification { approval { approver { nick, databaseId }}}, attachments { url }, canComment, comments { count, edges { node { content, author { nick, databaseId, avatar { url }}}}}}} }}} }\n            databaseId,\n        points,\n        pointsForAnswer,\n        pointsForBestAnswer,\n        created,\n        isClosed,\n        canBeAnswered,\n        grade {\n         name \n        },\n        eduLevel,\n          }\n        },\n        content,\n        answers {\n          hasVerified,\n          nodes {\n            author { receivedThanks, avatar { url, thumbnailUrl }, databaseId, description, helpedUsersCount, gender, created, specialRanks { name }, bestAnswersCount, answererLevel, points, rank { name }, friends { count }, answeringStreak { pointsForToday, pointsForTomorrow, progressIncreasedToday, progress, canLotteryPointsBeClaimed }, bestAnswersCountInLast30Days, questions { count, edges { node { content, grade { name }, subject { slug }, points, pointsForBestAnswer, pointsForAnswer, isClosed, canBeAnswered, created, attachments { url }, grade { name }, eduLevel, answers { nodes { databaseId, content, created, isBest, isConfirmed, qualityScore, points, ratesCount, verification { approval { approver { nick, databaseId }}}, attachments { url }, canComment, comments { count, edges { node { databaseId, deleted, content, author {\n                    nick, avatar { url, thumbnailUrl }, databaseId, friends { count }, receivedThanks, points, created, description\n                  }}}}}} }}} }\n            content, points, isBest, canComment, isConfirmed, qualityScore, thanksCount, ratesCount, comments {\n              edges {\n                node {\n                  databaseId, deleted, content, author {\n                    nick, avatar { url, thumbnailUrl }, databaseId, friends { count }, receivedThanks, points, created, description\n                  },\n                },\n              }\n            },\n            attachments {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n}\n";
export declare const baseURLs: {
    id: string;
    us: string;
    es: string;
    pt: string;
    ru: string;
    ro: string;
    tr: string;
    ph: string;
    pl: string;
    hi: string;
    fr: string;
};
export declare const languages: string[];
